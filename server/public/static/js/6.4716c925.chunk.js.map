{"version":3,"sources":["graphql/Book.js","views/edit/index.js"],"names":["ADD_BOOK","gql","DELETE_BOOK","UPDATE_BOOK","GET_BOOKS","GET_BOOK","Edit","history","useHistory","id","useParams","dto","mutationName","pageTitle","getMutation","data","book","_id","isbn","title","author","description","published_year","publisher","mutation","onCompleted","push","loading","error","Header","className","to","Body","onSubmit","e","preventDefault","variables","Object","keys","reduce","res","next","value","forEach","key","htmlFor","type","name","placeholder","defaultValue","ref","el","cols","rows","query","bookId","message"],"mappings":"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","file":"static/js/6.4716c925.chunk.js","sourcesContent":["import gql from \"graphql-tag\"\r\n\r\nexport const ADD_BOOK = gql`\r\n  mutation AddBook(\r\n    $isbn: String!\r\n    $title: String!\r\n    $author: String!\r\n    $description: String!\r\n    $publisher: String!\r\n    $published_year: Int!\r\n  ) {\r\n    addBook(\r\n      isbn: $isbn\r\n      title: $title\r\n      author: $author\r\n      description: $description\r\n      publisher: $publisher\r\n      published_year: $published_year\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETE_BOOK = gql`\r\n  mutation removeBook($id: String!) {\r\n    removeBook(id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_BOOK = gql`\r\n  mutation updateBook(\r\n    $id: String!\r\n    $isbn: String!\r\n    $title: String!\r\n    $author: String!\r\n    $description: String!\r\n    $publisher: String!\r\n    $published_year: Int!\r\n  ) {\r\n    updateBook(\r\n      id: $id\r\n      isbn: $isbn\r\n      title: $title\r\n      author: $author\r\n      description: $description\r\n      publisher: $publisher\r\n      published_year: $published_year\r\n    ) {\r\n      updated_date\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BOOKS = gql`\r\n  {\r\n    books {\r\n      _id\r\n      title\r\n      author\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BOOK = gql`\r\n  query book($bookId: String) {\r\n    book(id: $bookId) {\r\n      _id\r\n      isbn\r\n      title\r\n      author\r\n      description\r\n      published_year\r\n      publisher\r\n      updated_date\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport { Link, useParams, useHistory } from \"react-router-dom\"\r\nimport { Mutation, Query } from \"react-apollo\"\r\nimport { ADD_BOOK, GET_BOOK, UPDATE_BOOK } from \"@/graphql/Book\"\r\nimport { Card } from \"react-bootstrap\"\r\n\r\nfunction Edit() {\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n  const dto = {}\r\n  const mutationName = id ? UPDATE_BOOK : ADD_BOOK\r\n  const pageTitle = id ? \"UPDATE BOOK\" : \"ADD BOOK\"\r\n\r\n  const getMutation = (data = { book: {} }) => {\r\n    const {\r\n      book: { _id, isbn, title, author, description, published_year, publisher }\r\n    } = data\r\n\r\n    return (\r\n      <Mutation mutation={mutationName} onCompleted={() => history.push(\"/\")}>\r\n        {(mutationName, { loading, error }) => (\r\n          <Card>\r\n            <Card.Header>\r\n              {pageTitle}\r\n              <h4 className=\"fr\">\r\n                <Link to=\"/\">Book List</Link>\r\n              </h4>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <form\r\n                onSubmit={e => {\r\n                  e.preventDefault()\r\n                  const variables = Object.keys(dto).reduce((res, next) => {\r\n                    res[next] = dto[next].value\r\n                    return res\r\n                  }, {})\r\n                  variables.published_year = ~~variables.published_year\r\n\r\n                  _id && (variables.id = _id)\r\n                  mutationName({ variables })\r\n                  Object.keys(dto).forEach(key => {\r\n                    dto[key] = \"\"\r\n                  })\r\n                }}\r\n              >\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"isbn\">ISBN:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"isbn\"\r\n                    placeholder=\"ISBN\"\r\n                    defaultValue={isbn}\r\n                    ref={el => {\r\n                      dto.isbn = el\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"title\"\r\n                    placeholder=\"Title\"\r\n                    defaultValue={title}\r\n                    ref={el => {\r\n                      dto.title = el\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"author\">Author:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"author\"\r\n                    placeholder=\"Author\"\r\n                    defaultValue={author}\r\n                    ref={el => {\r\n                      dto.author = el\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description\">Description:</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                    cols=\"80\"\r\n                    rows=\"3\"\r\n                    defaultValue={description}\r\n                    ref={el => {\r\n                      dto.description = el\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"publisher\">Publisher:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"publisher\"\r\n                    placeholder=\"Publisher\"\r\n                    defaultValue={publisher}\r\n                    ref={el => {\r\n                      dto.publisher = el\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"published_year\">Published Year:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"published_year\"\r\n                    placeholder=\"Published Year\"\r\n                    defaultValue={published_year}\r\n                    ref={el => {\r\n                      dto.published_year = el\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </Card.Body>\r\n          </Card>\r\n        )}\r\n      </Mutation>\r\n    )\r\n  }\r\n\r\n  return id ? (\r\n    <Query\r\n      query={GET_BOOK}\r\n      variables={{\r\n        bookId: id\r\n      }}\r\n    >\r\n      {({ loading, error, data }) => {\r\n        if (loading) return \"Loading...\"\r\n        if (error) return `Error! ${error.message}`\r\n        return getMutation(data)\r\n      }}\r\n    </Query>\r\n  ) : (\r\n    getMutation()\r\n  )\r\n}\r\n\r\nexport default Edit\r\n"],"sourceRoot":""}